from typing import Tuple
from typing import Optional
import os
import sys
import torch
import fire
import time
import json
import pandas as pd

from pathlib import Path
from generation import Llama
from fairscale.nn.model_parallel.initialize import initialize_model_parallel

from llama import ModelArgs, Transformer, Tokenizer, LLaMA

def tweets():
    df = pd.read_csv('sentiment_analysis.csv', sep=';')
    tweets_cleaned = "".join(f"{index + 1}-'{content}';" for index, content in enumerate(df['clean_text'][:5].astype(str)))
    tweets_sentiment = 'Tweets:'+tweets_cleaned
    return tweets_sentiment

def main(
    ckpt_dir: str,
    tokenizer_path: str,
    temperature: float = 0,
    top_p: float = 0.9,
    max_seq_len: int = 2000,
    max_batch_size: int = 8,
    max_gen_len: Optional[int] = 512,
):
    generator = Llama.build(
        ckpt_dir=ckpt_dir,
        tokenizer_path=tokenizer_path,
        max_seq_len=max_seq_len,
        max_batch_size=max_batch_size,
    )

    prompts2 = [
        # For these prompts, the expected answer is the natural continuation of the prompt
        "I believe the meaning of life is",
        "Simply put, the theory of relativity states that ",
        "Building a website can be done in 10 simple steps:\n",
        # Few shot prompts: https://huggingface.co/blog/few-shot-learning-gpt-neo-and-inference-api
        """Tweet: "I hate it when my phone battery dies."
        Sentiment: Negative
        ###
        Tweet: "My day has been üëç"
        Sentiment: Positive
        ###
        Tweet: "This is the link to the article"
        Sentiment: Neutral
        ###
        Tweet: "This new music video was incredibile"
        Sentiment:""",
                """Translate English to French:
        
        sea otter => loutre de mer
        
        peppermint => menthe poivr√©e
        
        plush girafe => girafe peluche
        
        cheese =>""",
        
        # sentiment polarity analysis
        """Tweet:"o pesadelo da invas√£o de privacidade at√© onde vai a tecnologia do reconhecimento facial."
        Sentimento: negativo
        ###
        Tweet:"os vieses nos modelos de texto ai ser√£o um grande problema por exemplo a √©tica embutida no chatgpt permite brincar com o comunismo ao mesmo tempo em que condena claramente o nazismo t√£o
        desrespeitoso com as v√≠timas do terror vermelho e errado."
        Sentimento:negativo
        ###
        Tweet:"ser√° que o chatgpt vai substituir o google"
        Sentimento: neutro
        ###
        Tweet:"deve haver um sistema avan√ßado de monitoriza√ß√£o por v√≠deo vigil√¢ncia e reconhecimento facial."
        Sentimento:neutro
        ###
        Tweet:"o facebook vem aprimorando a sua tecnologia de reconhecimento facial possibilitando que deficientes visuais consigam ouvir uma descri√ß√£o de quem est√° na foto mesmo que o amigo n√£o esteja marcado
        na publica√ß√£o saiba mais."
        Sentimento:positivo
        ###
        Tweet:"nem s√≥ de reconhecimento de padr√µes vive as aplica√ß√µes de ia automatiza√ß√£o de servi√ßos podem aperfei√ßoar bastante os processos de uma organiza√ß√£o reduzindo os custos e aumentando a satisfa√ß√£o do cliente."
        Sentimento:positivo
        ###
        tweets(df['clean_text'])""",
    ]

    prompts = [
        # sentiment polarity analysis
        f"""Tweet: "reconhecimento facial √© vida"
        Sentiment: positivo
        ###
        Tweet: "essa √© uma das iniciativas mais legais que vi nos √∫ltimos tempos experi√™ncia interativa com chatbot simula um futuro sem a amaz√¥nia e mobiliza jovens na atualidade"
        Sentiment: positivo
        ###
        Tweet: "pol√≠cia militar est√° utilizando em fase de teste c√¢meras de videomonitoramento que com a base de dados do estado utiliza reconhecimento facial para cumprir mandados de pris√µes em aberto entre outras ocorr√™ncias pol√≠cia"
        Sentiment: neutro
        ###
        Tweet: "pesquisadores usam vis√£o computacional para reconstruir objetos"
        Sentiment: neutro
        ###
        Tweet: "e na inglaterra falta educa√ß√£o e puni√ß√£o na era de intelig√™ncia artificial e reconhecimento facial o sujeito que briga consegue retornar para o est√°dio √© incr√≠vel a falta de seguran√ßa e de organiza√ß√£o"
        Sentiment: negativo
        ###
        Tweet: "e mesmo assim o servi√ßo que voc√™s entregam √© um lixo entra ano sai ano e voc√™s n√£o fazem nada para melhorar o chatbot de voc√™s √© gen√©rico e ineficiente o chat web a mesma coisa ligar √© pedir pra passar nervoso na espera"
        Sentiment: negativo
        ###
        {tweets()}
        Sentiments: """
    ]

    prompts3 = [
        # sentiment polarity analysis
        f"""Tweets:1-"o processo de capta√ß√£o e reten√ß√£o de alunos tem muito a ganhar com a utiliza√ß√£o de chatbots com intelig√™ncia artificial";2-"essa √© uma das iniciativas mais legais que vi nos √∫ltimos tempos experi√™ncia interativa com chatbot simula um futuro sem a amaz√¥nia e mobiliza jovens na atualidade";3-"pol√≠cia militar est√° utilizando em fase de teste c√¢meras de videomonitoramento que com a base de dados do estado utiliza reconhecimento facial para cumprir mandados de pris√µes em aberto entre outras ocorr√™ncias pol√≠cia";4-"pesquisadores usam vis√£o computacional para reconstruir objetos";5-"e na inglaterra falta educa√ß√£o e puni√ß√£o na era de intelig√™ncia artificial e reconhecimento facial o sujeito que briga consegue retornar para o est√°dio √© incr√≠vel a falta de seguran√ßa e de organiza√ß√£o";6-"e mesmo assim o servi√ßo que voc√™s entregam √© um lixo entra ano sai ano e voc√™s n√£o fazem nada para melhorar o chatbot de voc√™s √© gen√©rico e ineficiente o chat web a mesma coisa ligar √© pedir pra passar nervoso na espera";
        Sentiments:1-positivo;2-positivo;3-neutro;4-neutro;5-negativo;6-negativo
        ###
        {tweets()}
        Sentiments: """,
    ]
   
    results = generator.generate(
        prompts3, max_gen_len=1200, temperature=temperature, top_p=top_p
    )

    for result in results:
        print(result)
        print("\n==================================\n")


if __name__ == "__main__":
    fire.Fire(main)
